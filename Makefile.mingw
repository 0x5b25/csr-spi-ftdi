# Use mingw32
TARGET_ARCH ?= i586-mingw32msvc-
# Use mingw-w64
#TARGET_ARCH ?= i686-w64-mingw32-

LIBFTDI ?=	./libftdi1
LIBUSB ?=	./libusb

CXX =	$(TARGET_ARCH)g++
CC =	$(TARGET_ARCH)gcc
LD =	$(TARGET_ARCH)g++

CFLAGS +=	-Wall
LDFLAGS +=	-shared -static -s

CPPFLAGS +=	-I$(LIBFTDI)/include/libftdi1
LDFLAGS  += -L$(LIBFTDI)/lib32
LDLIBS   += -lftdi1

CPPFLAGS +=	-I$(LIBUSB)/include
LDFLAGS  += -L$(LIBUSB)/MinGW32/static
LDLIBS   += -lusb-1.0

CPPFLAGS +=	-DSPI_STATS
CPPFLAGS +=	-DCOMPAT_USLEEP
# Fixes compilation on Debian/Ubuntu with mingw-w64 < 3.0.
# See: http://sourceforge.net/p/mingw-w64/mailman/mingw-w64-public/thread/4F8CA26A.70103@users.sourceforge.net/
CPPFLAGS +=	-DCOMPAT_MINGW_MS_VSNPRINTF
CPPFLAGS +=	-DCOMPAT_TIMER_MACROS

MAKEFILE =	$(firstword $(MAKEFILE_LIST))

ifeq ($(SPIAPI), )

all: spiapi-1.3 spiapi-1.4

spiapi-1.3::
	$(MAKE) -f $(MAKEFILE) SPIAPI=1.3 all

spiapi-1.4::
	$(MAKE) -f $(MAKEFILE) SPIAPI=1.4 all

else

OBJDIR =	spilpt-win32-api$(SPIAPI)
LIBRARY_DEF =	spilpt.dll-api$(SPIAPI).def

ifeq ($(SPIAPI), 1.3)
CPPFLAGS +=	-DSPIFNS_API=SPIFNS_API_1_3
else ifeq ($(SPIAPI), 1.4)
CPPFLAGS +=	-DSPIFNS_API=SPIFNS_API_1_4
endif

all: $(OBJDIR)/spilpt.dll

endif

$(OBJDIR)/basics.o: spi.h basics.h spifns.h logging.h
$(OBJDIR)/spi.o: spi.h compat.h
$(OBJDIR)/logging.o: logging.h compat.h

$(OBJDIR)/spilpt.dll: $(OBJDIR)/dllmain.o $(OBJDIR)/logging.o $(OBJDIR)/basics.o $(OBJDIR)/spi.o $(OBJDIR)/compat.o $(LIBRARY_DEF)
	mkdir -p $(OBJDIR)
	$(LD) $(LDFLAGS) $^ -o $@ $(LDLIBS)

$(OBJDIR)/%.o: %.c
	mkdir -p $(OBJDIR)
	$(CC) -c $(CFLAGS) $(CPPFLAGS) -o $@ $<

$(OBJDIR)/%.o: %.cpp
	mkdir -p $(OBJDIR)
	$(CXX) -c $(CFLAGS) $(CPPFLAGS) -o $@ $<

clean:
	rm -fr spilpt-win32-api1.3 spilpt-win32-api1.4
